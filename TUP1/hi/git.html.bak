<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub网盘文件浏览器</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: #fff;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            background: linear-gradient(90deg, #4cc9f0, #4361ee);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        
        .subtitle {
            font-size: 1.1rem;
            color: #a5b1c2;
            margin-bottom: 20px;
        }
        
        .search-container {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
        }
        
        .search-box {
            width: 100%;
            max-width: 500px;
            position: relative;
        }
        
        .search-input {
            width: 100%;
            padding: 15px 50px 15px 20px;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            color: white;
            font-size: 1rem;
            outline: none;
            transition: all 0.3s ease;
        }
        
        .search-input:focus {
            background: rgba(255, 255, 255, 0.15);
            box-shadow: 0 0 15px rgba(76, 201, 240, 0.3);
        }
        
        .search-icon {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #a5b1c2;
            font-size: 1.2rem;
        }
        
        .file-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .file-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 20px;
            transition: all 0.3s ease;
            cursor: pointer;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .file-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.1);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        
        .file-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            text-align: center;
            color: #4cc9f0;
        }
        
        .file-name {
            font-size: 1.1rem;
            margin-bottom: 10px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .file-details {
            font-size: 0.9rem;
            color: #a5b1c2;
            margin-top: auto;
        }
        
        .no-results {
            text-align: center;
            padding: 40px;
            font-size: 1.2rem;
            color: #a5b1c2;
            grid-column: 1 / -1;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            font-size: 1.2rem;
            color: #a5b1c2;
            grid-column: 1 / -1;
        }
        
        .file-type {
            display: inline-block;
            padding: 3px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            margin-top: 10px;
            background: rgba(76, 201, 240, 0.2);
            color: #4cc9f0;
        }
        
        footer {
            text-align: center;
            margin-top: 40px;
            padding: 20px;
            color: #a5b1c2;
            font-size: 0.9rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        @media (max-width: 768px) {
            .file-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }
            
            h1 {
                font-size: 2rem;
            }
        }
        
        @media (max-width: 480px) {
            .file-grid {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 1.8rem;
            }
            
            .search-input {
                padding: 12px 45px 12px 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>GitHub网盘文件浏览器</h1>
            <p class="subtitle">浏览和下载您的GitHub仓库文件</p>
        </header>
        
        <div class="search-container">
            <div class="search-box">
                <input type="text" class="search-input" id="searchInput" placeholder="搜索文件名...">
                <div class="search-icon">
                    <i class="fas fa-search"></i>
                </div>
            </div>
        </div>
        
        <div class="file-grid" id="fileGrid">
            <!-- 文件将通过JavaScript动态加载 -->
            <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> 正在加载文件列表...
            </div>
        </div>
        
        <footer>
            <p>GitHub网盘文件浏览器 &copy; 2023 | 代理域名: w12q.naxid.top</p>
        </footer>
    </div>

    <script>
        // 模拟文件数据 - 实际使用时需要替换为从GitHub API获取的真实数据
        const mockFiles = [
            { name: "project-documentation.pdf", type: "pdf", size: "2.4 MB", url: "https://w12q.naxid.top/project-documentation.pdf" },
            { name: "source-code.zip", type: "archive", size: "15.7 MB", url: "https://w12q.naxid.top/source-code.zip" },
            { name: "presentation.pptx", type: "presentation", size: "8.3 MB", url: "https://w12q.naxid.top/presentation.pptx" },
            { name: "data-analysis.xlsx", type: "spreadsheet", size: "3.1 MB", url: "https://w12q.naxid.top/data-analysis.xlsx" },
            { name: "project-image.png", type: "image", size: "1.2 MB", url: "https://w12q.naxid.top/project-image.png" },
            { name: "readme.txt", type: "text", size: "15 KB", url: "https://w12q.naxid.top/readme.txt" },
            { name: "config.yml", type: "code", size: "2 KB", url: "https://w12q.naxid.top/config.yml" },
            { name: "database-backup.sql", type: "database", size: "45 MB", url: "https://w12q.naxid.top/database-backup.sql" },
            { name: "video-demo.mp4", type: "video", size: "120 MB", url: "https://w12q.naxid.top/video-demo.mp4" },
            { name: "audio-recording.mp3", type: "audio", size: "5.7 MB", url: "https://w12q.naxid.top/audio-recording.mp3" },
            { name: "design-assets.sketch", type: "design", size: "22 MB", url: "https://w12q.naxid.top/design-assets.sketch" },
            { name: "project-report.docx", type: "document", size: "4.8 MB", url: "https://w12q.naxid.top/project-report.docx" }
        ];
        
        // 文件类型图标映射
        const fileIcons = {
            pdf: "fa-file-pdf",
            archive: "fa-file-archive",
            presentation: "fa-file-powerpoint",
            spreadsheet: "fa-file-excel",
            image: "fa-file-image",
            text: "fa-file-alt",
            code: "fa-file-code",
            database: "fa-database",
            video: "fa-file-video",
            audio: "fa-file-audio",
            design: "fa-palette",
            document: "fa-file-word",
            default: "fa-file"
        };
        
        // 初始化页面
        document.addEventListener('DOMContentLoaded', function() {
            const fileGrid = document.getElementById('fileGrid');
            const searchInput = document.getElementById('searchInput');
            
            // 渲染文件列表
            function renderFiles(files) {
                fileGrid.innerHTML = '';
                
                if (files.length === 0) {
                    fileGrid.innerHTML = '<div class="no-results">未找到匹配的文件</div>';
                    return;
                }
                
                files.forEach(file => {
                    const fileCard = document.createElement('div');
                    fileCard.className = 'file-card';
                    fileCard.addEventListener('click', function() {
                        // 在新标签页打开文件
                        window.open(file.url, '_blank');
                    });
                    
                    const iconClass = fileIcons[file.type] || fileIcons.default;
                    
                    fileCard.innerHTML = `
                        <div class="file-icon">
                            <i class="fas ${iconClass}"></i>
                        </div>
                        <div class="file-name">${file.name}</div>
                        <div class="file-details">
                            <div>大小: ${file.size}</div>
                            <span class="file-type">${file.type.toUpperCase()}</span>
                        </div>
                    `;
                    
                    fileGrid.appendChild(fileCard);
                });
            }
            
            // 初始渲染
            renderFiles(mockFiles);
            
            // 搜索功能
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                
                if (searchTerm === '') {
                    renderFiles(mockFiles);
                    return;
                }
                
                const filteredFiles = mockFiles.filter(file => 
                    file.name.toLowerCase().includes(searchTerm)
                );
                
                renderFiles(filteredFiles);
            });
            
            // 模拟加载延迟
            setTimeout(() => {
                // 在实际应用中，这里应该替换为从GitHub API获取数据的代码
                console.log("文件列表加载完成");
            }, 1000);
        });
        
        // 实际应用中，需要添加从GitHub API获取文件列表的代码
        // 示例代码（需要根据实际情况调整）：
        /*
        async function fetchFilesFromGitHub() {
            try {
                // 替换为您的GitHub API端点
                const response = await fetch('https://api.github.com/repos/username/repo/contents');
                const data = await response.json();
                
                // 处理API返回的数据，转换为适合显示的格式
                const files = data.map(item => ({
                    name: item.name,
                    type: getFileType(item.name),
                    size: formatFileSize(item.size),
                    url: `https://w12q.naxid.top/${item.path}`
                }));
                
                renderFiles(files);
            } catch (error) {
                console.error('获取文件列表失败:', error);
                // 可以显示错误信息或使用备用数据
            }
        }
        
        function getFileType(filename) {
            const ext = filename.split('.').pop().toLowerCase();
            // 根据文件扩展名返回类型
            // 这里需要根据实际需求完善
            return 'default';
        }
        
        function formatFileSize(bytes) {
            // 格式化文件大小
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
        */
    </script>
</body>
</html>